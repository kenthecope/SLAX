/* 
This script will free up as much space as possible on an EX VC stack. It merciliessly deletes
probably unused files and software packages.  

Author: Ken Cope  kcope@junper.net
Last modified: 02.04.2021
*/

version 1.0;
ns junos = "http://xml.juniper.net/junos/*/junos";
ns xnm = "http://xml.juniper.net/xnm/1.1/xnm";
ns jcs = "http://xml.juniper.net/junos/commit-scripts/1.0";
import "../import/junos.xsl";

/* @ISLOCAL = "true" */

var $local = jcs:open();

/* packages to delete -- make sure old is the last in the list */
var $del_packages := {
   <package> "jweb-ex";
   <package> "jail-runtime";
   <package> "jdocs-ex";
   <package> "jsd-jet-1";
   <package> "jsdn";
   <package> "py-base";
   <package> "py-base2";
   <package> "py-extensions";
   <package> "py-extensions2";
   <package> "old";
} 

match / {
    <op-script-results> {

        /* This only works on the master re - delete all files in home dir */
        <output> "These files will be deleted on the master RE";
        var $files_rpc = {
            <file-list>;
        }
        var $files_result = jcs:execute($local, $files_rpc);
        copy-of $files_result;

        <output> "Deleteing all files in home directory on master RE";
        var $delete_rpc = {
            <file-delete> {
                <path> '*';
            }
        }
        var $delete_result = jcs:execute($local, $delete_rpc);
        copy-of $delete_result;

        /* rm -rf on the users home dir */
        var $rm_rpc = {
            <request-shell-execute> {
                <command> "rm -rf *";
            }
        }
        var $rm_result = jcs:execute($local, $rm_rpc);
        copy-of $rm_result;

        /* Get the member id  of the virtual chassis to loop through some cleanup commands on each VC member */
        var $vc_info = jcs:invoke('get-virtual-chassis-information');

        /* loop through each member and free up space that doesnt work on all-members */
        for-each( $vc_info//member-list/member/member-id ) {
            var $member = .;
            <output> concat('Cleaning up VC member: ', $member);

            /* Standard request system storage cleanup */
            var $cleanup_rpc = {
                <request-system-storage-cleanup>;
                <member> $member;
            }
            var $cleanup_result = jcs:execute($local, $cleanup_rpc);
            copy-of $cleanup_result;

            /* Delete non-recovery snapshots */
            var $snapshot_rpc = {
                <request-snapshot> {
                    <delete> '*';
                }
            }
            var $snapshot_result = jcs:execute($local, $snapshot_rpc);
            copy-of $snapshot_result;


            /* fluff packages */
            for-each ($del_packages/package) {
                <output> concat('   Delete package: ', .);
                var $rpc = {
                    <request-package-delete> {
                        <package-name> .;
                        <member> $member;
                    }
                }
                var $result = jcs:execute($local,$rpc);
                copy-of $result;
            }
        } 
 
        expr jcs:close($local);
    }
}
